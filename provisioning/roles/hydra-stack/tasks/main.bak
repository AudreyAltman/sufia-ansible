---
- name: install package tomcat
  sudo: yes
  apt: name=tomcat7 state=present

- name: check fedora file
  sudo: no
  stat: path={{ install_path }}/fcrepo-webapp-4.1.0.war
  register: fedora_file

- name: download fedora
  get_url: url=http://repo1.maven.org/maven2/org/fcrepo/fcrepo-webapp/4.1.0/fcrepo-webapp-4.1.0.war group=vagrant owner=vagrant dest={{ install_path }}/
  when: fedora_file.stat.exists == False

- name: check fedora data dir
  sudo: no
  stat: path=/opt/fedora-data
  register: fedora_dir

- name: make fedora data dir
  file: owner=tomcat7 group=tomcat7 state=directory path=/opt/fedora-data
  sudo: yes
  when: fedora_dir.stat.exists == False

- name: check fedora.ware
  sudo: no
  stat: path=/var/lib/tomcat7/webapps/fedora.war
  register: fedora_war

- name: copy over fedora.war
  sudo: yes
  command: cp {{ install_path }}/fcrepo-webapp-4.1.0.war /var/lib/tomcat7/webapps/fedora.war
  when: fedora_war.stat.exists == False

- name: create tomcat config and java options
  sudo: yes
  template: src=tomcat7.j2 dest=/etc/default/tomcat7 backup=yes 
# TODO: make Java options configurable at the time of the ansible run

- name: create velocity log
  sudo: yes
  file: path=/var/log/tomcat7/velocity.log state=touch owner=tomcat7 group=tomcat7 mode=0644

- name: symlink velocity log
  sudo: yes
  file: src=/var/log/tomcat7/velocity.log dest=/var/lib/tomcat7/velocity.log state=link

- name: check solr file
  sudo: no
  stat: path={{ install_path }}/solr-4.10.3.tgz
  register: solr_tarball

- name: download solr tarball
  get_url: url=http://archive.apache.org/dist/lucene/solr/4.10.3/solr-4.10.3.tgz dest={{ install_path }}/
  when: solr_tarball.stat.exists == False

- name: untar solr tarball
  unarchive: src={{ install_path }}/solr-4.10.3.tgz dest=/opt/install/ copy=no

- name: check solr dir
  sudo: no
  stat: path=/opt/solr/lib
  register: solr_dir

- name: make solr lib dir
  file: owner=tomcat7 group=tomcat7 state=directory path=/opt/solr/lib
  sudo: yes
  when: solr_dir.stat.exists == False

- name: copy over war file
  sudo: yes
  command: cp {{ install_path }}/solr-4.10.3/dist/solr-4.10.3.war /opt/solr/

- name: copy over dist jars
  sudo: yes
  shell: cp {{ install_path }}/solr-4.10.3/dist/*.jar /opt/solr/lib/

- name: copy over contrib dir
  sudo: yes
  command: cp -r {{ install_path }}/solr-4.10.3/contrib /opt/solr/lib/

- name: copy over example collection
  sudo: yes
  command: cp -r {{ install_path }}/solr-4.10.3/example/solr/collection1 /opt/solr/

- name: copy logging jars
  sudo: yes
  shell: cp {{ install_path }}/solr-4.10.3/example/lib/ext/*.jar /usr/share/tomcat7/lib/

- name: set ownership and group for solr
  sudo: yes
  shell: chown -R tomcat7:tomcat7 /opt/solr

- name: copy log4j properties file
  sudo: yes
  shell: cp {{ install_path }}/solr-4.10.3/example/resources/log4j.properties /usr/share/tomcat7/

- name: set ownership and group for tomcat
  sudo: yes
  shell: chown -R tomcat7:tomcat7 /usr/share/tomcat7

- name: create solr xml file
  sudo: yes
  template: src=hydra_xml.j2 dest=/opt/solr/hydra.xml group=tomcat7 owner=tomcat7

- name: symlink solr xml file to tomcat
  sudo: yes
  file: src=/opt/solr/hydra.xml dest=/etc/tomcat7/Catalina/localhost/hydra.xml state=link

- name: restart tomcat
  sudo: yes
  service: name=tomcat7 enabled=yes state=restarted
  
